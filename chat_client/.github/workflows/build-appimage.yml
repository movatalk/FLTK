name: Build AppImage

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-appimage:
    runs-on: ubuntu-20.04  # Using older Ubuntu for better compatibility
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake libfltk1.3-dev portaudio19-dev libpng-dev libjpeg-dev \
                          libgl1-mesa-dev libfuse2 wget patchelf libfontconfig1-dev libxft-dev \
                          libxinerama-dev libcairo2-dev libxcb-xinerama0-dev libxcursor-dev
      
      - name: Build FLTK (if required)
        run: |
          # Check if we need to build FLTK from source
          # For GitHub Actions we'll use system FLTK for now
          echo "Using system FLTK libraries"

      - name: Build Chat Client
        run: |
          mkdir -p build
          cd build
          cmake ..
          make -j$(nproc)
          cd ..
      
      - name: Download linuxdeploy
        run: |
          wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          chmod +x linuxdeploy-x86_64.AppImage

      - name: Create icons
        run: |
          mkdir -p ./data/icons
          bash ./data/icons/make_icon.sh

      - name: Build AppImage
        run: |
          bash ./scripts/build_appimage.sh
          # Verify AppImage was created
          ls -la ChatClient-*.AppImage
      
      - name: Test AppImage
        run: |
          # Basic test - verify AppImage launches without errors
          ./ChatClient-*.AppImage --appimage-extract-and-run --version || echo "Non-zero exit but expected for headless test"

      - name: Upload AppImage as artifact
        uses: actions/upload-artifact@v3
        with:
          name: ChatClient-AppImage
          path: ChatClient-*.AppImage
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ChatClient-*.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
